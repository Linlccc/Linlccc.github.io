<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Linlccc's Blog</title><link>https://linlccc.com/</link><description>Recent content on Linlccc's Blog</description><image><title>Linlccc's Blog</title><url>https://linlccc.com/favicon/dark/favicon-192x192.png</url><link>https://linlccc.com/favicon/dark/favicon-192x192.png</link></image><generator>Hugo</generator><language>zh-CN</language><managingEditor>linlccc@163.com (Linlccc)</managingEditor><webMaster>linlccc@163.com (Linlccc)</webMaster><lastBuildDate>Thu, 20 Jun 2024 11:23:56 +0800</lastBuildDate><atom:link href="https://linlccc.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo-Hahah 主题文章配置</title><link>https://linlccc.com/posts/hugo-hahahthemearticleconfiguration/</link><pubDate>Mon, 17 Jun 2024 21:19:58 +0800</pubDate><author>[Lin]</author><guid>https://linlccc.com/posts/hugo-hahahthemearticleconfiguration/</guid><description>文章基础配置 # yaml 复制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 # 标题 title:</description></item><item><title>手写js高级知识点</title><link>https://linlccc.com/pending/adv-js-knowledge/</link><pubDate>Sun, 16 Jun 2024 22:28:46 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/pending/adv-js-knowledge/</guid><description>实现原生的 AJAX 请求 # js 复制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 const ajax = { get(url, fn) { const xhr = new XMLHttpRequest(); xhr.open(&amp;#34;GET&amp;#34;, url, true); // 第三个参数异步与否 xhr.onreadystatechange = function () { if (xhr.readyState === 4) {</description></item><item><title>C# 多线程第一页</title><link>https://linlccc.com/series/csharpmultithreading/one/</link><pubDate>Tue, 18 Jun 2024 20:49:05 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/series/csharpmultithreading/one/</guid><description>C# 多线程第一页内容 #</description></item><item><title>C# 多线程首页</title><link>https://linlccc.com/series/csharpmultithreading/zero/</link><pubDate>Tue, 18 Jun 2024 20:49:05 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/series/csharpmultithreading/zero/</guid><description>C# 多线程首页内容 #</description></item><item><title>测试系列</title><link>https://linlccc.com/series/test/zero/</link><pubDate>Tue, 18 Jun 2024 20:49:05 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/series/test/zero/</guid><description>测试系列 #</description></item><item><title>常用js</title><link>https://linlccc.com/pending/commonlyusedjs/</link><pubDate>Sun, 16 Jun 2024 23:33:27 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/pending/commonlyusedjs/</guid><description>防抖 # js 复制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function debounce(fn, delay) { let timer; return function (...args) { timer &amp;amp;&amp;amp; clearTimeout(timer); timer = setTimeout(() =&amp;gt; fn.apply(this, args), delay); }; } // 测试 function task(arg) { console.log(&amp;#34;run task&amp;#34; + arg); } const debounceTask = debounce(task, 1000); window.addEventListener(&amp;#34;scroll&amp;#34;, () =&amp;gt; debounceTask(11)); 节流 # js 复制 1 2</description></item><item><title>常用js</title><link>https://linlccc.com/posts/commonlyusedjs/</link><pubDate>Sun, 16 Jun 2024 23:33:27 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/posts/commonlyusedjs/</guid><description>防抖 # js 复制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function debounce(fn, delay) { let timer; return function (...args) { timer &amp;amp;&amp;amp; clearTimeout(timer); timer = setTimeout(() =&amp;gt; fn.apply(this, args), delay); }; } // 测试 function task(arg) { console.log(&amp;#34;run task&amp;#34; + arg); } const debounceTask = debounce(task, 1000); window.addEventListener(&amp;#34;scroll&amp;#34;, () =&amp;gt; debounceTask(11)); 节流 # js 复制 1 2</description></item><item><title>常用软件</title><link>https://linlccc.com/posts/mostusedsoftwares/</link><pubDate>Fri, 10 May 2024 13:59:55 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/posts/mostusedsoftwares/</guid><description>基础工具 # 7z 压缩 TrafficMonitor 任务栏数据显示 PowerToys Windows 增强工具 ListArr 文件搜索 Foxmail 邮件管理 NeatDownloadManager 下载管理 Ditto 粘贴板 Qttabbar Windows10 文件管理器多标签 浏览器 # Google Chrome 编辑器 # Visual Studio VS Code Notepad++ Obsidian Markdown 编辑</description></item><item><title>VsCode 常用扩展推荐</title><link>https://linlccc.com/pending/vscodeextensions/</link><pubDate>Wed, 08 May 2024 09:05:43 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/pending/vscodeextensions/</guid><description>基础扩展 # Chinese (Simplified) # 插件 txt 复制 1 VS Code 的中文（简体）语言包 vscode-icons # 插件 txt 复制 1 图标 XML，Json，TOML 扩展 # JSON Crack # 插件 txt 复制 1 Json 数据可视化 Even Better TOML</description></item><item><title>在 Vue 中使用 Axios</title><link>https://linlccc.com/posts/axiosinvue/</link><pubDate>Tue, 07 May 2024 18:20:22 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/posts/axiosinvue/</guid><description>axios.ts # ts 复制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 import axios from &amp;#34;axios&amp;#34;; // 文档：https://g</description></item><item><title>ES6 常用代码块</title><link>https://linlccc.com/pending/commonlyusedes6/</link><pubDate>Tue, 07 May 2024 16:28:47 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/pending/commonlyusedes6/</guid><description>ES6 20 个经常使用的技巧 # 打乱数组顺序 # js 复制 1 2 3 4 let arr = [&amp;#34;😄&amp;#34;, 67, true, false, &amp;#34;55&amp;#34;]; arr = arr.sort(() =&amp;gt; 0.5 - Math.random()); console.log(arr); // [ &amp;#39;😄&amp;#39;, &amp;#39;55&amp;#39;, 67, false,</description></item><item><title>Nginx基础配置</title><link>https://linlccc.com/pending/nginxconfig/</link><pubDate>Sun, 05 May 2024 19:57:58 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/pending/nginxconfig/</guid><description>具体配置可见 # NGINX 配置 NGINX 入门学习笔记 NGINX 备忘清单 Web 服务器 # nginx 复制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # http server { listen 80; server_name _; location / { root /data; index index.html index.htm; } } #</description></item><item><title>常用SQL</title><link>https://linlccc.com/posts/commonsql/</link><pubDate>Sun, 05 May 2024 07:05:18 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/posts/commonsql/</guid><description>DCL(Data Control Language)数据控制语言 # DCL 在 mysql 中可以正常使用其他数据库没测试 用户管理 # sql 复制 1 2 3 4 5 6 -- 查询用户 select host,user from mysql.user; -- 添加用户 create user &amp;#39</description></item><item><title>Linux 命令大全</title><link>https://linlccc.com/pending/linuxcommandlist/</link><pubDate>Sun, 05 May 2024 01:46:07 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/pending/linuxcommandlist/</guid><description>系统指令 # Bash 复制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # 显示系统信息：内核版本、机器类型等 uname # 显示正在运行的Linux内核的发行版</description></item><item><title>管理 SSH</title><link>https://linlccc.com/posts/managessh/</link><pubDate>Mon, 22 Apr 2024 20:06:55 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/posts/managessh/</guid><description>生成新的 SSH 密钥 # 在终端中输入以下指令以提供的电子邮件为标签创建SSH密钥 Bash 复制 1 ssh-keygen -t rsa -b 4096 -C &amp;#34;[email@example.com]&amp;#34; 根据提示输入密钥保存文件，可空保存到默认文件C</description></item><item><title>C++ 学习笔记</title><link>https://linlccc.com/posts/cppstudynotes/</link><pubDate>Tue, 28 Feb 2023 23:20:19 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/posts/cppstudynotes/</guid><description>基础 # 整数类型 # 这些类型里面除了只有 signed 和 int 的都可以省略 signed / int 例如 short, short int, signed short, signed short int 表示一个类型 类型 占用字节数 取值范围 signed char 1 -128 到 127 unsigned char 1 0 到 255 short,</description></item><item><title>踩坑记--Safari之正向后行断言</title><link>https://linlccc.com/posts/saferisteppingonthepit/</link><pubDate>Fri, 24 Feb 2023 15:21:11 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/posts/saferisteppingonthepit/</guid><description>正则表达式 # 1. Safari 处理正则表达式中的正向后行断言时(?&amp;lt;=&amp;hellip;)，异常 # js 复制 1 2 3 4 5 6 // 以下代码在 Chrome 中正常，但在 Safari 中会报</description></item><item><title>hugo 模板基本语法</title><link>https://linlccc.com/posts/hugotemplatebasicsyntax/</link><pubDate>Wed, 22 Feb 2023 17:57:49 +0800</pubDate><author>[Linlccc]</author><guid>https://linlccc.com/posts/hugotemplatebasicsyntax/</guid><description>概念 # 每一个模板都有一个名为 Page 数据对象 Page 信息参考： Page 信息参考 基础语法 # 访问变量 # go 复制 1 2 {{ .Titel }} // 访问已存在的变量 {{ $address }} // 访问自定义变量 声明</description></item><item><title>C++ 配置 libtorch 环境</title><link>https://linlccc.com/posts/cppconfigurelibtorchenvironment/</link><pubDate>Thu, 20 Jun 2024 10:20:00 +0800</pubDate><author>[Lin]</author><guid>https://linlccc.com/posts/cppconfigurelibtorchenvironment/</guid><description>下载 LibTorch # 从 LibTorch 下载对应系统的 C++ 版本 下载完成后解压文件，如解压到C:\libtorch（以下都将以此为libtorch目录） 配置环境变量 # 确保程</description></item></channel></rss>