<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>linlccc&#39;s blog</title>
    <link>https://linlccc.com/</link>
    <description>Recent content on linlccc&#39;s blog</description>
    <image>
      <title>linlccc&#39;s blog</title>
      <url>https://linlccc.com/images/site/icon192.png</url>
      <link>https://linlccc.com/images/site/icon192.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 10 May 2024 13:59:55 +0800</lastBuildDate><atom:link href="https://linlccc.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>常用软件</title>
      <link>https://linlccc.com/posts/mostusedsoftwares/</link>
      <pubDate>Fri, 10 May 2024 13:59:55 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/mostusedsoftwares/</guid>
      <description>基础工具 7z 压缩 TrafficMonitor 任务栏数据显示 PowerToys Windows 增强工具 ListArr 文件搜索 Foxmail 邮件管理 NeatDownloadManager 下载管理 Ditto 粘贴板 Qttabbar Windows10 文件管理器多标签 浏览器 Google Chrome 编辑器 Visual Studio VS Code Notepad++ Obsidian Markdown 编辑器 远程 1Remote 【推荐】 MobaXterm WindTerm FileZilla FTP 工具 内网穿透 Frp Natfrp 提供内网穿透服务 服务挂载 nssm</description>
    </item>
    
    <item>
      <title>VsCode 常用扩展推荐</title>
      <link>https://linlccc.com/posts/vscodeextensions/</link>
      <pubDate>Wed, 08 May 2024 09:05:43 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/vscodeextensions/</guid>
      <description>基础扩展 Chinese (Simplified) 插件 1 VS Code 的中文（简体）语言包 vscode-icons 插件 1 图标 XML，Json，TOML 扩展 JSON Crack 插件 1 Json 数据可视化 Even Better TOML 插件 1 TOML 语言支持 Markdown All in One 插件 1 Markdown 快捷键等支持 Markdown Preview Enhanced 插件 1 Markdown 预览 markdownlint 插件 1 Markdown 语法检查 C# 扩展 .NET</description>
    </item>
    
    <item>
      <title>在 Vue 中使用 Axios</title>
      <link>https://linlccc.com/posts/axiosinvue/</link>
      <pubDate>Tue, 07 May 2024 18:20:22 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/axiosinvue/</guid>
      <description>axios.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 import axios from &amp;#39;axios&amp;#39; // 文档：https://github.com/axios/axios#request-conf</description>
    </item>
    
    <item>
      <title>手写js高级知识点</title>
      <link>https://linlccc.com/posts/adv-js-knowledge/</link>
      <pubDate>Tue, 07 May 2024 17:05:29 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/adv-js-knowledge/</guid>
      <description>1、实现原生的AJAX请求 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 const ajax = { get(url, fn) { const xhr = new XMLHttpRequest() xhr.open(&amp;#39;GET&amp;#39;, url, true)// 第三个参数异步与否 xhr.onreadystatechange = function() { if (xhr.readyState === 4) { fn(xhr.responeText) } } xhr.send() }, post(url, data, fn) { const xhr = new XMLHttpRequest() xhr.open(&amp;#39;POST&amp;#39;, url, true) xhr.setRequestHeader(&amp;#39;Content-type&amp;#39;,&amp;#39;application/x-www-form-urlencoded&amp;#39;) xhr.onreadystatechange = function () { if (xhr.readyState === 4) { fn(xhr.responeText) } }</description>
    </item>
    
    <item>
      <title>ES6 常用代码块</title>
      <link>https://linlccc.com/posts/commonlyusedes6/</link>
      <pubDate>Tue, 07 May 2024 16:28:47 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/commonlyusedes6/</guid>
      <description>ES6 20个经常使用的技巧 打乱数组顺序 1 2 3 4 let arr = [&amp;#39;😄&amp;#39;, 67, true, false, &amp;#39;55&amp;#39;] arr = arr.sort(() =&amp;gt; 0.5 - Math.random()) console.log(arr) // [ &amp;#39;😄&amp;#39;, &amp;#39;55&amp;#39;, 67, false, true ] 删除数字之外的所有字符 1 2 3 4 const str = &amp;#39;xieyezi 23213 is 95994 so hansome 223333&amp;#39; const numbers = str.replace(/\D/g, &amp;#39;&amp;#39;) console.log(numbers) //</description>
    </item>
    
    <item>
      <title>常用js</title>
      <link>https://linlccc.com/posts/commonlyusedjs/</link>
      <pubDate>Tue, 07 May 2024 03:52:05 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/commonlyusedjs/</guid>
      <description>防抖 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function debounce (fn, delay) { let timer; return function (...args) { timer&amp;amp;&amp;amp;clearTimeout(timer); timer = setTimeout(() =&amp;gt; fn.apply(this, args), delay); }; } // 测试 function task (arg) { console.log(&amp;#39;run task&amp;#39; + arg); } const debounceTask = debounce(task, 1000); window.addEventListener(&amp;#39;scroll&amp;#39;, () =&amp;gt; debounceTask(11)); 节流 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function throttle (fn, delay) { let last = 0; return function (...args) { const now = Date.now(); if (now - last &amp;lt; delay) return;</description>
    </item>
    
    <item>
      <title>Nginx基础配置</title>
      <link>https://linlccc.com/posts/nginxconfig/</link>
      <pubDate>Sun, 05 May 2024 19:57:58 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/nginxconfig/</guid>
      <description>具体配置可见 NGINX 配置 NGINX 入门学习笔记 NGINX 备忘清单 Web服务器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # http server { listen 80; server_name _; location / { root /data; index index.html index.htm; } } # https server { listen 443 ssl; server_name _; ssl_certificate /path/to/certificete.crt; ssl_certificate_key /path/to/private-key.key; location / { root /data; index index.html index.htm; } } 反向代理 1 2 3 4 5 6 7</description>
    </item>
    
    <item>
      <title>常用SQL</title>
      <link>https://linlccc.com/posts/commonsql/</link>
      <pubDate>Sun, 05 May 2024 07:05:18 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/commonsql/</guid>
      <description>DCL(Data Control Language)数据控制语言 DCL 在 mysql 中可以正常使用其他数据库没测试 用户管理 1 2 3 4 5 6 -- 查询用户 select host,user from mysql.user; -- 添加用户 create user &amp;#39;用户名&amp;#39;@&amp;#39;主机名&amp;#39; identified by &amp;#39;密码&amp;#3</description>
    </item>
    
    <item>
      <title>Linux 命令大全</title>
      <link>https://linlccc.com/posts/linuxcommandlist/</link>
      <pubDate>Sun, 05 May 2024 01:46:07 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/linuxcommandlist/</guid>
      <description>系统指令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # 显示系统信息：内核版本、机器类型等 uname # 显示正在运行的Linux内核的发行版本 uname -r # 显示当前时间、系统运行时间、用户和负载平均值 uptime # 显示系统主机</description>
    </item>
    
    <item>
      <title>管理 SSH</title>
      <link>https://linlccc.com/posts/managessh/</link>
      <pubDate>Mon, 22 Apr 2024 20:06:55 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/managessh/</guid>
      <description>生成新的 SSH 密钥 在终端中输入以下指令以提供的电子邮件为标签创建SSH密钥 1 ssh-keygen -t rsa -b 4096 -C &amp;#34;[email@example.com]&amp;#34; 根据提示输入密钥保存文件，可空保存到默认文件C:\Users\[User]\.ssh\id_rsa 根据提示输入两次</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 学习笔记</title>
      <link>https://linlccc.com/posts/cppstudynotes/</link>
      <pubDate>Tue, 28 Feb 2023 23:20:19 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/cppstudynotes/</guid>
      <description>基础 整数类型 这些类型里面除了只有 signed 和 int 的都可以省略 signed / int 例如 short, short int, signed short, signed short int 表示一个类型 类型 占用字节数 取值范围 signed char 1 -128 到 127 unsigned char 1 0 到 255 short, short int, signed short, signed short int 2 -32768 到 32767 unsigned short, unsigned short int 2 0 到 65535 int, signed, signed int 4 -2147483648 到 2147483647 unsigned, unsigned int 4</description>
    </item>
    
    <item>
      <title>踩坑记--Safari之正向后行断言</title>
      <link>https://linlccc.com/posts/saferisteppingonthepit/</link>
      <pubDate>Fri, 24 Feb 2023 15:21:11 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/saferisteppingonthepit/</guid>
      <description>正则表达式 1. Safari 处理正则表达式中的正向后行断言时(?&amp;lt;=&amp;hellip;)，异常 1 2 3 4 5 6 // 以下代码在 Chrome 中正常，但在 Safari 中会报错 &amp;#34;https://linlccc.com?theme=light&amp;#34;.replace(/(?&amp;lt;=[?|&amp;amp;]theme=)\w+/, &amp;#34;dark&amp;#34;); // 解决方案，使用捕捉组+替换字符串的方式 &amp;#34;https://linlccc.com?theme=light&amp;#34;.replace(/([?|&amp;amp;]theme=)\w+/, &amp;#34;$1dark&amp;#34;); // 以上两个执行结果都</description>
    </item>
    
    <item>
      <title>hugo 模板基本语法</title>
      <link>https://linlccc.com/posts/hugotemplatebasicsyntax/</link>
      <pubDate>Wed, 22 Feb 2023 17:57:49 +0800</pubDate>
      
      <guid>https://linlccc.com/posts/hugotemplatebasicsyntax/</guid>
      <description>概念 每一个模板都有一个名为 Page 数据对象 Page 信息参考：Page 信息参考 基础语法 访问变量 1 2 {{ .Titel }} // 访问已存在的变量 {{ $address }} // 访问自定义变量 声明变量与赋值 1 2 3 4 {{ $address := &amp;#34;http://www.baidu.com&amp;#34; }} // 声明自定义变量并赋值 {{ $msg := `Line one. Line two.` }}</description>
    </item>
    
    
    
  </channel>
</rss>
