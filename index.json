[{"content":"二级标题 三级标题 四级标题 五级标题 六级标题 段落正常字体 段落斜体 段落粗体 段落粗斜体\n删除线 下划线\n无序项 有序项1 有序项2 有序项3 嵌套项 嵌套项 区块引用\n一层嵌套引用\n二层嵌套引用\n十层嵌套引用\u0026hellip;..\nprintf(\u0026quot;这是一个代码片段\u0026quot;); //代码片段\nprintf(\u0026quot;这是一个代码块\u0026quot;); //代码块 左对齐 居中 右对齐 这是一个单元格 这是一个单元格 这是一个单元格 这是一个单元格 这是一个单元格 这是一个单元格 内联方式超链接\n引用方式超链接\n图片方式 图片 图片内联 图片引用 图片内联超链接 图片引用超链接 **使用转义字符**\nLaTeX_($LaTeX: E=mc^2$)_LaTex $$LaTeX: E=mc^2$$\n,数值一,数值二,数值三 类型1,5000,8000,4000 类型2,3000,1000,4000 类型3,5000,7000,6000 类型4,7000,2000,3000 type: column title: 柱状图 x.title: 类型 x.suffix: 单位x y.title: 数值 y.suffix: 单位y e^{i\\pi} + 1 = 0 //(Just English Allow Here) graph TD A[开始A] --\u0026gt; B(过程B) B --\u0026gt; C{判断条件C} C --\u0026gt;|条件C1| D[结束D] C --\u0026gt;|条件C2| E[结束E] C --\u0026gt;|条件C3| F[结束F] sequenceDiagram A-\u0026gt;\u0026gt;B: 是否已收到消息？ B--\u0026gt;\u0026gt;A: 已收到消息 gantt title 甘特图 dateFormat YYYY-MM-DD section 项目A 任务1: duty1, 2018-01-01, 30d 任务2: 20d section 项目B 任务3: 2018-01-01, 10d 任务4: after duty1, 20d 快捷键 功能 键位 新建 Markdown 笔记 Ctrl+Alt+D 粗体 Ctrl+B 斜体 Ctrl+I 删除线 Ctrl+T 下划线 Ctrl+U 分隔线 Ctrl + Shift + - 编号列表 Ctrl + Shift + O 项目符号列表 Ctrl + Shift + W 插入待办事项 Ctrl + Shift + C 代码块 Ctrl+Shift+L 插入日期和时间 Alt + Shift + D 撤销 Ctrl+Z 在笔记内搜索 Ctrl+F Test TTTTTTT\n下面是一张图片 Code 1 // 语法结构 while (条件){ 需要执行的代码 } // 该循环永远不会结束，这可能导致浏览器崩溃。 while(true){ console.log('加菲猫！') } const arr = ['1','2',undefined,'3','','4']; let i = 0; while(arr[i]){ console.log(arr[i]) i = i + 1; } // 输出: 1 // 输出: 2 const arr = ['1','2','3','4']; let i = 0; while(arr[i]){ console.log(arr[i]) i = i + 1; } Code 2 static void Web() { // 加载配置 string webConfigFile = \u0026quot;WebConfig.json\u0026quot;; WebConfig webConfig; if (!File.Exists(webConfigFile)) { webConfig = new(); webConfig.Port = 8082; File.WriteAllText(webConfigFile, JsonConvert.SerializeObject(webConfig, Formatting.Indented)); } else webConfig = JsonConvert.DeserializeObject\u0026lt;WebConfig\u0026gt;(File.ReadAllText(webConfigFile))!; Serve.Run(RunOptions.Default .Silence() .AddComponent\u0026lt;ServeServiceComponent\u0026gt;().UseComponent\u0026lt;ServeApplicationComponent\u0026gt;() .ConfigureServices(services =\u0026gt; { services.AddJwt(); services.AddJsonOptions(configure =\u0026gt; configure.JsonSerializerOptions.Converters.AddDateTimeTypeConverters(\u0026quot;yyyy-MM-dd HH:mm:ss.fff\u0026quot;)); }) .ConfigureBuilder(builder =\u0026gt; { builder.WebHost.UseUrls($\u0026quot;http://*:{webConfig.Port}\u0026quot;); }) .Configure(app =\u0026gt; { app.UseInject(option =\u0026gt; { option.ConfigureSwaggerUI(ui =\u0026gt; { ui.RoutePrefix = \u0026quot;swagger\u0026quot;; }); }); app.UseAuthentication(); app.UseAuthorization(); })); //Serve.Run($\u0026quot;http://*:{webConfig.Port}\u0026quot;, silence: true, additional: services =\u0026gt; //{ // services.AddJsonOptions(configure =\u0026gt; configure.JsonSerializerOptions.Converters.AddDateTimeTypeConverters(\u0026quot;yyyy-MM-dd HH:mm:ss.fff\u0026quot;)); //}); } Table 账户 密码 备注 asdasd asdasd aaa asdasd asdasd aaa asdasd asdasd aaa Code 3 static void Web() { // 加载配置 string webConfigFile = \u0026quot;WebConfig.json\u0026quot;; WebConfig webConfig; if (!File.Exists(webConfigFile)) { webConfig = new(); webConfig.Port = 8082; File.WriteAllText(webConfigFile, JsonConvert.SerializeObject(webConfig, Formatting.Indented)); } else webConfig = JsonConvert.DeserializeObject\u0026lt;WebConfig\u0026gt;(File.ReadAllText(webConfigFile))!; Serve.Run(RunOptions.Default .Silence() .AddComponent\u0026lt;ServeServiceComponent\u0026gt;().UseComponent\u0026lt;ServeApplicationComponent\u0026gt;() .ConfigureServices(services =\u0026gt; { services.AddJwt(); services.AddJsonOptions(configure =\u0026gt; configure.JsonSerializerOptions.Converters.AddDateTimeTypeConverters(\u0026quot;yyyy-MM-dd HH:mm:ss.fff\u0026quot;)); }) .ConfigureBuilder(builder =\u0026gt; { builder.WebHost.UseUrls($\u0026quot;http://*:{webConfig.Port}\u0026quot;); }) .Configure(app =\u0026gt; { app.UseInject(option =\u0026gt; { option.ConfigureSwaggerUI(ui =\u0026gt; { ui.RoutePrefix = \u0026quot;swagger\u0026quot;; }); }); app.UseAuthentication(); app.UseAuthorization(); })); //Serve.Run($\u0026quot;http://*:{webConfig.Port}\u0026quot;, silence: true, additional: services =\u0026gt; //{ // services.AddJsonOptions(configure =\u0026gt; configure.JsonSerializerOptions.Converters.AddDateTimeTypeConverters(\u0026quot;yyyy-MM-dd HH:mm:ss.fff\u0026quot;)); //}); } ","permalink":"https://linlccc.com/posts/test/","summary":"测试文章摘要","title":"这是一篇测试文章"},{"content":"这是第二个文章\n","permalink":"https://linlccc.com/posts/second/","summary":"这是第二个文章","title":"这是第二个文章"},{"content":"这是第三个文章 这是第三个文章 Introduction This is bold text, and this is emphasized text.\nVisit the Hugo website!\n下面是一张图片 Code 1 static void Web() { // 加载配置 string webConfigFile = \u0026quot;WebConfig.json\u0026quot;; WebConfig webConfig; if (!File.Exists(webConfigFile)) { webConfig = new(); webConfig.Port = 8082; File.WriteAllText(webConfigFile, JsonConvert.SerializeObject(webConfig, Formatting.Indented)); } else webConfig = JsonConvert.DeserializeObject\u0026lt;WebConfig\u0026gt;(File.ReadAllText(webConfigFile))!; Serve.Run(RunOptions.Default .Silence() .AddComponent\u0026lt;ServeServiceComponent\u0026gt;().UseComponent\u0026lt;ServeApplicationComponent\u0026gt;() .ConfigureServices(services =\u0026gt; { services.AddJwt(); services.AddJsonOptions(configure =\u0026gt; configure.JsonSerializerOptions.Converters.AddDateTimeTypeConverters(\u0026quot;yyyy-MM-dd HH:mm:ss.fff\u0026quot;)); }) .ConfigureBuilder(builder =\u0026gt; { builder.WebHost.UseUrls($\u0026quot;http://*:{webConfig.Port}\u0026quot;); }) .Configure(app =\u0026gt; { app.UseInject(option =\u0026gt; { option.ConfigureSwaggerUI(ui =\u0026gt; { ui.RoutePrefix = \u0026quot;swagger\u0026quot;; }); }); app.UseAuthentication(); app.UseAuthorization(); })); //Serve.Run($\u0026quot;http://*:{webConfig.Port}\u0026quot;, silence: true, additional: services =\u0026gt; //{ // services.AddJsonOptions(configure =\u0026gt; configure.JsonSerializerOptions.Converters.AddDateTimeTypeConverters(\u0026quot;yyyy-MM-dd HH:mm:ss.fff\u0026quot;)); //}); } 账户 密码 备注 asdasd asdasd aaa asdasd asdasd aaa asdasd asdasd aaa Code 2 static void Web() { // 加载配置 string webConfigFile = \u0026quot;WebConfig.json\u0026quot;; WebConfig webConfig; if (!File.Exists(webConfigFile)) { webConfig = new(); webConfig.Port = 8082; File.WriteAllText(webConfigFile, JsonConvert.SerializeObject(webConfig, Formatting.Indented)); } else webConfig = JsonConvert.DeserializeObject\u0026lt;WebConfig\u0026gt;(File.ReadAllText(webConfigFile))!; Serve.Run(RunOptions.Default .Silence() .AddComponent\u0026lt;ServeServiceComponent\u0026gt;().UseComponent\u0026lt;ServeApplicationComponent\u0026gt;() .ConfigureServices(services =\u0026gt; { services.AddJwt(); services.AddJsonOptions(configure =\u0026gt; configure.JsonSerializerOptions.Converters.AddDateTimeTypeConverters(\u0026quot;yyyy-MM-dd HH:mm:ss.fff\u0026quot;)); }) .ConfigureBuilder(builder =\u0026gt; { builder.WebHost.UseUrls($\u0026quot;http://*:{webConfig.Port}\u0026quot;); }) .Configure(app =\u0026gt; { app.UseInject(option =\u0026gt; { option.ConfigureSwaggerUI(ui =\u0026gt; { ui.RoutePrefix = \u0026quot;swagger\u0026quot;; }); }); app.UseAuthentication(); app.UseAuthorization(); })); //Serve.Run($\u0026quot;http://*:{webConfig.Port}\u0026quot;, silence: true, additional: services =\u0026gt; //{ // services.AddJsonOptions(configure =\u0026gt; configure.JsonSerializerOptions.Converters.AddDateTimeTypeConverters(\u0026quot;yyyy-MM-dd HH:mm:ss.fff\u0026quot;)); //}); } ","permalink":"https://linlccc.com/posts/third/","summary":"这是第三个文章 这是第三个文章 Introduction This is bold text, and this is emphasized text. Visit the Hugo website! 下面是一张图片 Code 1 static void Web() { // 加载配置 string webConfigFile = \u0026quot;WebConfig.json\u0026quot;; WebConfig webConfig; if (!File.Exists(webConfigFile)) { webConfig = new(); webConfig.Port = 8082; File.WriteAllText(webConfigFile, JsonConvert.SerializeObject(webConfig, Formatting.Indented)); } else webConfig = JsonConvert.DeserializeObject\u0026lt;WebConfig\u0026gt;(File.ReadAllText(webConfigFile))!; Serve.Run(RunOptions.Default","title":"这是第三个文章"}]